Elm.FamiliadaGame = Elm.FamiliadaGame || {};
Elm.FamiliadaGame.make = function (_elm) {
   "use strict";
   _elm.FamiliadaGame = _elm.FamiliadaGame || {};
   if (_elm.FamiliadaGame.values)
   return _elm.FamiliadaGame.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "FamiliadaGame",
   $Basics = Elm.Basics.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var viewAnswer = function (answer) {
      return answer.visible ? A2($Html.li,
      _L.fromArray([]),
      _L.fromArray([$Html.text(answer.answer)])) : A2($Html.li,
      _L.fromArray([]),
      _L.fromArray([$Html.text("...........")]));
   };
   var viewAnswersList = function (answers) {
      return A2($List.map,
      viewAnswer,
      answers);
   };
   var view = F2(function (address,
   model) {
      return A2($Html.div,
      _L.fromArray([$Html$Attributes.$class("jumbotron")]),
      _L.fromArray([$Html.text("elo elo 3 5 0")
                   ,A2($Html.div,
                   _L.fromArray([]),
                   _L.fromArray([$Html.text("lista odpowiedzi")]))
                   ,A2($Html.ul,
                   _L.fromArray([]),
                   viewAnswersList(model.currentQuestion.answers))]));
   });
   var update = F2(function (action,
   model) {
      return function () {
         switch (action.ctor)
         {case "NoOp": return model;}
         _U.badCase($moduleName,
         "between lines 71 and 77");
      }();
   });
   var ChangeVisibility = F2(function (a,
   b) {
      return {ctor: "ChangeVisibility"
             ,_0: a
             ,_1: b};
   });
   var NoOp = {ctor: "NoOp"};
   var actions = $Signal.mailbox(NoOp);
   var createSampleAnswer = function (shown) {
      return {_: {}
             ,answer: "Odpowiedz1"
             ,id: 1
             ,points: 12
             ,visible: shown};
   };
   var sampleQuestion = {_: {}
                        ,answers: _L.fromArray([createSampleAnswer(true)
                                               ,createSampleAnswer(false)])
                        ,id: 1
                        ,question: "pytanie 1"};
   var initialModel = {_: {}
                      ,currentQuestion: sampleQuestion};
   var model = A3($Signal.foldp,
   update,
   initialModel,
   actions.signal);
   var main = A2($Signal.map,
   view(actions.address),
   model);
   var Question = F3(function (a,
   b,
   c) {
      return {_: {}
             ,answers: c
             ,id: a
             ,question: b};
   });
   var Answer = F4(function (a,
   b,
   c,
   d) {
      return {_: {}
             ,answer: b
             ,id: a
             ,points: c
             ,visible: d};
   });
   var Model = function (a) {
      return {_: {}
             ,currentQuestion: a};
   };
   _elm.FamiliadaGame.values = {_op: _op
                               ,Model: Model
                               ,Answer: Answer
                               ,Question: Question
                               ,createSampleAnswer: createSampleAnswer
                               ,sampleQuestion: sampleQuestion
                               ,initialModel: initialModel
                               ,NoOp: NoOp
                               ,ChangeVisibility: ChangeVisibility
                               ,update: update
                               ,view: view
                               ,viewAnswer: viewAnswer
                               ,viewAnswersList: viewAnswersList
                               ,main: main
                               ,model: model
                               ,actions: actions};
   return _elm.FamiliadaGame.values;
};